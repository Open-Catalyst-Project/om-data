"""prepopenmmsim.py
Author: Muhammad R. Hasyim

Script to prepare an OpenMM simulation, using the lammps2omm module, given 
the output generated by a script that runs the data2lammps.py module. 
This script will prepare both the initial configuration in PDB format
and the XML force field file. 
"""
import numpy as np
import MDAnalysis as mda
import lammps2omm as lmm
import sys
import random
import string

# Check filename if it is solvent vs. system.
filename = sys.argv[1]
lmpdata_file = filename+".data"
pdb_file = filename+".pdb"

# Load LAMMPS data file as a Universe object in MDAnalysis. 
# We use this to write a new PDB file for the inital configuration.
# and re-write the topology information. 
u = mda.Universe(lmpdata_file)
Natoms = len(u.atoms)
u.add_TopologyAttr('record_types',['HETATM']*Natoms)

# Delete certain topology attributes.
u.delete_bonds(u.bonds)
u.delete_dihedrals(u.dihedrals)
u.delete_impropers(u.impropers)
u.delete_angles(u.angles)

# Open the LAMMPS data file manually and read + store topology info. 
lmm.grab_lmpdata_attr(lmpdata_file)

# Add new topology attributes to remove warnings
u.add_TopologyAttr('elements',lmm.lmp_allels)
u.add_TopologyAttr('chainIDs',['A']*Natoms)
u.add_TopologyAttr('altLocs',['']*Natoms)
u.add_TopologyAttr('icodes',['']*len(u.residues))
u.add_TopologyAttr('tempfactors',[0]*Natoms)
u.add_TopologyAttr('occupancies',[1.0]*Natoms)

# Open the corresponding PDB file (generated by packmol)
lmm.grab_pdbdata_attr(pdb_file)
u.add_TopologyAttr('names',lmm.pdb_names)
u.add_TopologyAttr('resnames',lmm.pdb_resname_mol)

# Write the OpenMM Xml force field file
lmm.write_forcefield(u,filename)

# Write the OpenMM PDB file
lmm.write_pdbfile(u,filename)
